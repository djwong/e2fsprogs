#!/bin/bash

#  Copyright (C) 2018 Oracle.  All Rights Reserved.
#
#  Author: Darrick J. Wong <darrick.wong@oracle.com>
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it would be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write the Free Software Foundation,
#  Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301, USA.

# Clean up leftover e2scrub snapshots

prog_path() {
	path="$1"
	displayname="$2"

	if ! type -P "${path}" && [ -n "${displayname}" ]; then
		echo "${displayname}: Command not found."
		exitcode 8
	fi
}

LVS_PROG="$(prog_path "@root_sbindir@/lvs" "lvs")"
LVREMOVE_PROG="$(prog_path "@root_sbindir@/lvremove" "lvremove")"

# Find any ${lvname}.e2scrub snapshot and delete it
"${LVS_PROG}" -o vg_name,lv_name,lv_role --noheadings 2> /dev/null | while read vg lv role extra; do
	# Parse error?
	test -n "${extra}" || continue
	# Is this really a snapshot?
	echo "${role}" | grep -q "snapshot" || continue
	# An e2scrub snapshot?
	echo "${lv}" | grep -q ".e2scrub$" || continue

	# Check that the e2scrub snap still exists after waiting a brief period.
	# This is how try to avoid deleting a snap from underneath a running
	# scrub.
	dev="/dev/${vg}/${lv}"
	test -e "${dev}" || continue
	"${SLEEP_PROG}" 2
	test -e "${dev}" || continue

	# Remove and wait for removal to succeed.
	"${LVREMOVE_PROG}" -f "${vg}/${lv}" 3>&-
	while [ -e "${dev}" ] && [ "$?" -eq "5" ]; do
		"${SLEEP_PROG}" 0.5
		"${LVREMOVE_PROG}" -f "${vg}/${lv}" 3>&-
	done
done

exitcode 0
